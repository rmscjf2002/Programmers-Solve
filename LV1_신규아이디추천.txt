#include <string>
#include <vector>
#include <algorithm>

using namespace std;

string solution(string new_id) {
    string answer;
	bool startjum = false; // 시작지점에 .(마침표) 있는지 확인
	bool endjum = false; // 끝지점에 .(마침표) 있는지 확인
	int jumcnt = 0;

	for (unsigned int i = 0; i < new_id.length(); i++)
	{
		if (new_id[i] == '.')
		{
			jumcnt++;
			if (jumcnt == 2)
			{
				new_id[i] = ' ';
				jumcnt--;
			}
		}

		if (new_id[i] >= 'A' && new_id[i] <= 'Z')
		{
			// startjum = true;
            jumcnt = 0;
			new_id[i] = tolower(new_id[i]);
		}

		else if (!(new_id[i] >= 'a' && new_id[i] <= 'z'))
		{
			startjum = true;
            jumcnt = 0;
			if (!(new_id[i] >= '0' && new_id[i] <= '9'))
			{
				if (new_id[i] != '.' && new_id[i] != '-' && new_id[i] != '_')
				{
					new_id[i] = ' ';
				}
			}
		}

		else
		{
			// startjum = true;
			jumcnt = 0;
		}
		
	}
    new_id.erase(remove(new_id.begin(), new_id.end(), ' '),new_id.end());
    
    for (unsigned int i = 0; i < new_id.length(); i++)
	{
		if (new_id[i] == '.' && startjum == false)
		{
			new_id[i] = ' ';
		}

		else
		{
			startjum = true;
			break;
		}
	}
    
	int len = new_id.length() - 1;
	for (int i= len; i > -1; i--)
	{
		if (new_id[i] == '.' && endjum == false)
		{
			new_id[i] = ' ';
		}
		else
		{
			endjum = true;
			break;
		}
	}
	
	new_id.erase(remove(new_id.begin(), new_id.end(), ' '),new_id.end());
	startjum = false;
	endjum = false;
    jumcnt = 0;
	for (unsigned int i = 0; i < new_id.size(); i++)
	{
		if (new_id[i] == '.')
		{
			if (startjum == false)
				new_id[i] = ' ';
			else
			{
				jumcnt++;
				if (jumcnt == 2)
				{
					new_id[i] = ' ';
					jumcnt--;
				}

			}

		}
		else
		{
			jumcnt = 0;
			startjum = true;
		}
	}


	len = new_id.length() - 1;
	for (int i = len; i > -1; i--)
	{
		if (new_id[i] == '.' && endjum == false)
		{
			new_id[i] = ' ';
		}
		else
		{
			endjum = true;
			break;
		}
	}

	new_id.erase(remove(new_id.begin(), new_id.end(), ' '), new_id.end());

	if (new_id.size() == 0)
		new_id = "a";

	if (new_id.length() > 15)
	{
		for (int i = 0; i < 15; i++)
		{
			if (new_id[14] == '.' && i == 14)
				break;
				
			answer += new_id[i];
		}
		
        new_id.clear();
        new_id = answer;
			
	}
    
	while (new_id.length() <= 2)
	{
		new_id += new_id[new_id.length() - 1];
	}

	//if (answer.length() == 0)
		return new_id;
	//else
		//return answer;

}