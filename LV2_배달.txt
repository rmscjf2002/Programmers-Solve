#include <iostream>
#include <vector>
using namespace std;


/* 노드,간선,가중치를 표현하는 방법, 그리고 그걸 이용한 DFS */
/* 자주 사용하지 않아 까먹었다. 가중치 포함하는 DFS는 처음 풀어봄 */
/* 다른사람의 답안 참조 */

vector<pair<int, int>> graph[51];
int visit[51][51] = { 0 };

void dfs(int idx, int sum, int _n, int _k)
{
	for (int i = 0; i < graph[idx].size(); i++)
	{
		int next = graph[idx][i].first;
		int time = graph[idx][i].second;
		if (sum + time > _k)
			continue;
		if (visit[idx][next] !=0 && visit[idx][next] <= sum + time)
			continue;
		visit[next][0] = 1;
		visit[idx][next] = sum + time;
		dfs(next, sum + time, _n, _k);
	}
}


int solution(int n, vector<vector<int> > road, int k) {

    int answer = 0;

	for (int i = 0; i < road.size(); i++)
	{
		int a, b, c;
		a = road[i][0]; 
		b = road[i][1];
		c = road[i][2]; // 걸리는 시간

		graph[a].push_back({ b,c });
		graph[b].push_back({ a,c });
	}
	dfs(1, 0, n, k);
	visit[1][0] = 1;
	for (int i = 1; i <= n; i++)
	{
		if (visit[i][0] == 1)
			answer++;
	}


    return answer;
}