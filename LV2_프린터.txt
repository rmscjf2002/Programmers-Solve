#include <string>
#include <vector>
#include <queue>

using namespace std;

int solution(vector<int> priorities, int location) {
    priority_queue<int, vector<int>> pq(priorities.begin(), priorities.end());

	vector<int> v;
	queue<pair<int,int>> q;
	int cnt = 0;
	
	for (unsigned int i = 0; i<priorities.size(); i++)
	{
		q.push({ cnt,priorities[i]});
		cnt++;
       
	}

	while (!q.empty())
	{
		int name = q.front().first;
		int prior = q.front().second;
		q.pop();
		if (prior == pq.top())
		{
			v.push_back(name);
			pq.pop();
		}
		else
		{
			q.push({ name,prior });
		}
	}

	for (unsigned int i = 0; i < v.size(); i++)
	{
		if (v[i] == location)
		{
			return i+1;
		}
	}
  
}