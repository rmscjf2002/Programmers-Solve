#include <string>
#include <vector>
#include <stack>
#include <queue>

using namespace std;

/* 올바른 괄호 문자열인지 확인하는 함수 */

bool check(queue<char> q)
{
	stack<char> s;
	int len = q.size();

	while(!q.empty())
	{
		
		char tmp = q.front();
		q.pop();
        // 비어 있거나, (,[,{ 이 나오면 push하고 문자열이 맞으면 pop한다.
		if (s.empty() || tmp == '(' || tmp == '[' || tmp == '{')
			s.push(tmp);

		else if (!s.empty())
		{
			if (s.top() == '(' && tmp == ')')
				s.pop();
			else if (s.top() == '[' && tmp == ']')
				s.pop();
			else if (s.top() == '{' && tmp == '}')
				s.pop();
		}
	}
    // 만약 stack이 비어있으면 제대로 문자열 짝이 맞은거니까 true반환 , 아니면 false반환
	if (s.empty())
		return true;
	else
		return false;
}

int solution(string s) {
    int answer = 0;
	queue<char> q;
	int len = s.length();
	
	for (int i = 0; i < len; i++)
	{
		q.push(s[i]);
	}
	
    // 문자열 회전 전에 올바른 문자열인지 먼저 check
	if (check(q))
		answer++;
    
    // 문자열을 한칸씩 회전시키면서 확인하고 올바른 괄호 문자열이 되면 answer++
	for (int i = 0; i < len - 1; i++)
	{
	
		char tmp = q.front();
		q.pop();
		q.push(tmp);
		
		if (check(q))
			answer++;

	}
    return answer;
}