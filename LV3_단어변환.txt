#include <string>
#include <vector>

using namespace std;

int answer = 0x7f7f7f7f;
bool visited[51];

bool check(const string&a, const string &b)
{
	int cnt = 0;

	for (int i = 0; i < a.size(); i++)
	{
		if (a[i] != b[i])
		{
			cnt++;
			if (cnt >= 2)
				return false;
		}
	}
	return true;
}

void DFS(const string &begin, const string &target, const vector<string> &words, int cnt)
{
	if (answer <= cnt)
		return;

	if (begin == target)
	{
		answer = min(answer, cnt);
		return;
	}

	for (int i = 0; i < words.size(); i++)
	{
		if (check(begin, words[i]) && !visited[i])
		{
			visited[i] = true;
			DFS(words[i], target, words, cnt+1);
			visited[i] = false;
		}
	}

	return;
}

int solution(string begin, string target, vector<string> words) {
    DFS(begin, target, words, 0);
    
    if(answer == 0x7f7f7f7f)
        answer = 0;
    return answer;
}